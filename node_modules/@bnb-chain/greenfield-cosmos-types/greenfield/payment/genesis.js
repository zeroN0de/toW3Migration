"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenesisState = exports.protobufPackage = void 0;
/* eslint-disable */
const params_1 = require("./params");
const stream_record_1 = require("./stream_record");
const payment_account_count_1 = require("./payment_account_count");
const payment_account_1 = require("./payment_account");
const auto_settle_record_1 = require("./auto_settle_record");
const _m0 = __importStar(require("protobufjs/minimal"));
const helpers_1 = require("../../helpers");
exports.protobufPackage = "greenfield.payment";
function createBaseGenesisState() {
    return {
        params: undefined,
        streamRecordList: [],
        paymentAccountCountList: [],
        paymentAccountList: [],
        autoSettleRecordList: []
    };
}
exports.GenesisState = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.params !== undefined) {
            params_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.streamRecordList) {
            stream_record_1.StreamRecord.encode(v, writer.uint32(18).fork()).ldelim();
        }
        for (const v of message.paymentAccountCountList) {
            payment_account_count_1.PaymentAccountCount.encode(v, writer.uint32(26).fork()).ldelim();
        }
        for (const v of message.paymentAccountList) {
            payment_account_1.PaymentAccount.encode(v, writer.uint32(34).fork()).ldelim();
        }
        for (const v of message.autoSettleRecordList) {
            auto_settle_record_1.AutoSettleRecord.encode(v, writer.uint32(42).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGenesisState();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.params = params_1.Params.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.streamRecordList.push(stream_record_1.StreamRecord.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.paymentAccountCountList.push(payment_account_count_1.PaymentAccountCount.decode(reader, reader.uint32()));
                    break;
                case 4:
                    message.paymentAccountList.push(payment_account_1.PaymentAccount.decode(reader, reader.uint32()));
                    break;
                case 5:
                    message.autoSettleRecordList.push(auto_settle_record_1.AutoSettleRecord.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            params: (0, helpers_1.isSet)(object.params) ? params_1.Params.fromJSON(object.params) : undefined,
            streamRecordList: Array.isArray(object?.streamRecordList) ? object.streamRecordList.map((e) => stream_record_1.StreamRecord.fromJSON(e)) : [],
            paymentAccountCountList: Array.isArray(object?.paymentAccountCountList) ? object.paymentAccountCountList.map((e) => payment_account_count_1.PaymentAccountCount.fromJSON(e)) : [],
            paymentAccountList: Array.isArray(object?.paymentAccountList) ? object.paymentAccountList.map((e) => payment_account_1.PaymentAccount.fromJSON(e)) : [],
            autoSettleRecordList: Array.isArray(object?.autoSettleRecordList) ? object.autoSettleRecordList.map((e) => auto_settle_record_1.AutoSettleRecord.fromJSON(e)) : []
        };
    },
    toJSON(message) {
        const obj = {};
        message.params !== undefined && (obj.params = message.params ? params_1.Params.toJSON(message.params) : undefined);
        if (message.streamRecordList) {
            obj.streamRecordList = message.streamRecordList.map(e => e ? stream_record_1.StreamRecord.toJSON(e) : undefined);
        }
        else {
            obj.streamRecordList = [];
        }
        if (message.paymentAccountCountList) {
            obj.paymentAccountCountList = message.paymentAccountCountList.map(e => e ? payment_account_count_1.PaymentAccountCount.toJSON(e) : undefined);
        }
        else {
            obj.paymentAccountCountList = [];
        }
        if (message.paymentAccountList) {
            obj.paymentAccountList = message.paymentAccountList.map(e => e ? payment_account_1.PaymentAccount.toJSON(e) : undefined);
        }
        else {
            obj.paymentAccountList = [];
        }
        if (message.autoSettleRecordList) {
            obj.autoSettleRecordList = message.autoSettleRecordList.map(e => e ? auto_settle_record_1.AutoSettleRecord.toJSON(e) : undefined);
        }
        else {
            obj.autoSettleRecordList = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseGenesisState();
        message.params = object.params !== undefined && object.params !== null ? params_1.Params.fromPartial(object.params) : undefined;
        message.streamRecordList = object.streamRecordList?.map(e => stream_record_1.StreamRecord.fromPartial(e)) || [];
        message.paymentAccountCountList = object.paymentAccountCountList?.map(e => payment_account_count_1.PaymentAccountCount.fromPartial(e)) || [];
        message.paymentAccountList = object.paymentAccountList?.map(e => payment_account_1.PaymentAccount.fromPartial(e)) || [];
        message.autoSettleRecordList = object.autoSettleRecordList?.map(e => auto_settle_record_1.AutoSettleRecord.fromPartial(e)) || [];
        return message;
    },
    fromSDK(object) {
        return {
            params: object.params ? params_1.Params.fromSDK(object.params) : undefined,
            streamRecordList: Array.isArray(object?.stream_record_list) ? object.stream_record_list.map((e) => stream_record_1.StreamRecord.fromSDK(e)) : [],
            paymentAccountCountList: Array.isArray(object?.payment_account_count_list) ? object.payment_account_count_list.map((e) => payment_account_count_1.PaymentAccountCount.fromSDK(e)) : [],
            paymentAccountList: Array.isArray(object?.payment_account_list) ? object.payment_account_list.map((e) => payment_account_1.PaymentAccount.fromSDK(e)) : [],
            autoSettleRecordList: Array.isArray(object?.auto_settle_record_list) ? object.auto_settle_record_list.map((e) => auto_settle_record_1.AutoSettleRecord.fromSDK(e)) : []
        };
    },
    toSDK(message) {
        const obj = {};
        message.params !== undefined && (obj.params = message.params ? params_1.Params.toSDK(message.params) : undefined);
        if (message.streamRecordList) {
            obj.stream_record_list = message.streamRecordList.map(e => e ? stream_record_1.StreamRecord.toSDK(e) : undefined);
        }
        else {
            obj.stream_record_list = [];
        }
        if (message.paymentAccountCountList) {
            obj.payment_account_count_list = message.paymentAccountCountList.map(e => e ? payment_account_count_1.PaymentAccountCount.toSDK(e) : undefined);
        }
        else {
            obj.payment_account_count_list = [];
        }
        if (message.paymentAccountList) {
            obj.payment_account_list = message.paymentAccountList.map(e => e ? payment_account_1.PaymentAccount.toSDK(e) : undefined);
        }
        else {
            obj.payment_account_list = [];
        }
        if (message.autoSettleRecordList) {
            obj.auto_settle_record_list = message.autoSettleRecordList.map(e => e ? auto_settle_record_1.AutoSettleRecord.toSDK(e) : undefined);
        }
        else {
            obj.auto_settle_record_list = [];
        }
        return obj;
    }
};
//# sourceMappingURL=genesis.js.map