"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenesisState = exports.protobufPackage = void 0;
/* eslint-disable */
const params_1 = require("./params");
const types_1 = require("./types");
const _m0 = __importStar(require("protobufjs/minimal"));
const helpers_1 = require("../../helpers");
exports.protobufPackage = "greenfield.sp";
function createBaseGenesisState() {
    return {
        params: undefined,
        storageProviders: [],
        spStoragePriceList: []
    };
}
exports.GenesisState = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.params !== undefined) {
            params_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.storageProviders) {
            types_1.StorageProvider.encode(v, writer.uint32(18).fork()).ldelim();
        }
        for (const v of message.spStoragePriceList) {
            types_1.SpStoragePrice.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGenesisState();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.params = params_1.Params.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.storageProviders.push(types_1.StorageProvider.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.spStoragePriceList.push(types_1.SpStoragePrice.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            params: (0, helpers_1.isSet)(object.params) ? params_1.Params.fromJSON(object.params) : undefined,
            storageProviders: Array.isArray(object?.storageProviders) ? object.storageProviders.map((e) => types_1.StorageProvider.fromJSON(e)) : [],
            spStoragePriceList: Array.isArray(object?.spStoragePriceList) ? object.spStoragePriceList.map((e) => types_1.SpStoragePrice.fromJSON(e)) : []
        };
    },
    toJSON(message) {
        const obj = {};
        message.params !== undefined && (obj.params = message.params ? params_1.Params.toJSON(message.params) : undefined);
        if (message.storageProviders) {
            obj.storageProviders = message.storageProviders.map(e => e ? types_1.StorageProvider.toJSON(e) : undefined);
        }
        else {
            obj.storageProviders = [];
        }
        if (message.spStoragePriceList) {
            obj.spStoragePriceList = message.spStoragePriceList.map(e => e ? types_1.SpStoragePrice.toJSON(e) : undefined);
        }
        else {
            obj.spStoragePriceList = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = createBaseGenesisState();
        message.params = object.params !== undefined && object.params !== null ? params_1.Params.fromPartial(object.params) : undefined;
        message.storageProviders = object.storageProviders?.map(e => types_1.StorageProvider.fromPartial(e)) || [];
        message.spStoragePriceList = object.spStoragePriceList?.map(e => types_1.SpStoragePrice.fromPartial(e)) || [];
        return message;
    },
    fromSDK(object) {
        return {
            params: object.params ? params_1.Params.fromSDK(object.params) : undefined,
            storageProviders: Array.isArray(object?.storage_providers) ? object.storage_providers.map((e) => types_1.StorageProvider.fromSDK(e)) : [],
            spStoragePriceList: Array.isArray(object?.sp_storage_price_list) ? object.sp_storage_price_list.map((e) => types_1.SpStoragePrice.fromSDK(e)) : []
        };
    },
    toSDK(message) {
        const obj = {};
        message.params !== undefined && (obj.params = message.params ? params_1.Params.toSDK(message.params) : undefined);
        if (message.storageProviders) {
            obj.storage_providers = message.storageProviders.map(e => e ? types_1.StorageProvider.toSDK(e) : undefined);
        }
        else {
            obj.storage_providers = [];
        }
        if (message.spStoragePriceList) {
            obj.sp_storage_price_list = message.spStoragePriceList.map(e => e ? types_1.SpStoragePrice.toSDK(e) : undefined);
        }
        else {
            obj.sp_storage_price_list = [];
        }
        return obj;
    }
};
//# sourceMappingURL=genesis.js.map