"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VersionedParams = exports.Params = exports.protobufPackage = void 0;
/* eslint-disable */
const helpers_1 = require("../../helpers");
const _m0 = __importStar(require("protobufjs/minimal"));
exports.protobufPackage = "greenfield.storage";
function createBaseParams() {
    return {
        versionedParams: undefined,
        maxPayloadSize: helpers_1.Long.UZERO,
        mirrorBucketRelayerFee: "",
        mirrorBucketAckRelayerFee: "",
        mirrorObjectRelayerFee: "",
        mirrorObjectAckRelayerFee: "",
        mirrorGroupRelayerFee: "",
        mirrorGroupAckRelayerFee: "",
        maxBucketsPerAccount: 0,
        discontinueCountingWindow: helpers_1.Long.UZERO,
        discontinueObjectMax: helpers_1.Long.UZERO,
        discontinueBucketMax: helpers_1.Long.UZERO,
        discontinueConfirmPeriod: helpers_1.Long.ZERO,
        discontinueDeletionMax: helpers_1.Long.UZERO,
        stalePolicyCleanupMax: helpers_1.Long.UZERO
    };
}
exports.Params = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.versionedParams !== undefined) {
            exports.VersionedParams.encode(message.versionedParams, writer.uint32(10).fork()).ldelim();
        }
        if (!message.maxPayloadSize.isZero()) {
            writer.uint32(16).uint64(message.maxPayloadSize);
        }
        if (message.mirrorBucketRelayerFee !== "") {
            writer.uint32(26).string(message.mirrorBucketRelayerFee);
        }
        if (message.mirrorBucketAckRelayerFee !== "") {
            writer.uint32(34).string(message.mirrorBucketAckRelayerFee);
        }
        if (message.mirrorObjectRelayerFee !== "") {
            writer.uint32(42).string(message.mirrorObjectRelayerFee);
        }
        if (message.mirrorObjectAckRelayerFee !== "") {
            writer.uint32(50).string(message.mirrorObjectAckRelayerFee);
        }
        if (message.mirrorGroupRelayerFee !== "") {
            writer.uint32(58).string(message.mirrorGroupRelayerFee);
        }
        if (message.mirrorGroupAckRelayerFee !== "") {
            writer.uint32(66).string(message.mirrorGroupAckRelayerFee);
        }
        if (message.maxBucketsPerAccount !== 0) {
            writer.uint32(72).uint32(message.maxBucketsPerAccount);
        }
        if (!message.discontinueCountingWindow.isZero()) {
            writer.uint32(80).uint64(message.discontinueCountingWindow);
        }
        if (!message.discontinueObjectMax.isZero()) {
            writer.uint32(88).uint64(message.discontinueObjectMax);
        }
        if (!message.discontinueBucketMax.isZero()) {
            writer.uint32(96).uint64(message.discontinueBucketMax);
        }
        if (!message.discontinueConfirmPeriod.isZero()) {
            writer.uint32(104).int64(message.discontinueConfirmPeriod);
        }
        if (!message.discontinueDeletionMax.isZero()) {
            writer.uint32(112).uint64(message.discontinueDeletionMax);
        }
        if (!message.stalePolicyCleanupMax.isZero()) {
            writer.uint32(120).uint64(message.stalePolicyCleanupMax);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.versionedParams = exports.VersionedParams.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.maxPayloadSize = reader.uint64();
                    break;
                case 3:
                    message.mirrorBucketRelayerFee = reader.string();
                    break;
                case 4:
                    message.mirrorBucketAckRelayerFee = reader.string();
                    break;
                case 5:
                    message.mirrorObjectRelayerFee = reader.string();
                    break;
                case 6:
                    message.mirrorObjectAckRelayerFee = reader.string();
                    break;
                case 7:
                    message.mirrorGroupRelayerFee = reader.string();
                    break;
                case 8:
                    message.mirrorGroupAckRelayerFee = reader.string();
                    break;
                case 9:
                    message.maxBucketsPerAccount = reader.uint32();
                    break;
                case 10:
                    message.discontinueCountingWindow = reader.uint64();
                    break;
                case 11:
                    message.discontinueObjectMax = reader.uint64();
                    break;
                case 12:
                    message.discontinueBucketMax = reader.uint64();
                    break;
                case 13:
                    message.discontinueConfirmPeriod = reader.int64();
                    break;
                case 14:
                    message.discontinueDeletionMax = reader.uint64();
                    break;
                case 15:
                    message.stalePolicyCleanupMax = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            versionedParams: (0, helpers_1.isSet)(object.versionedParams) ? exports.VersionedParams.fromJSON(object.versionedParams) : undefined,
            maxPayloadSize: (0, helpers_1.isSet)(object.maxPayloadSize) ? helpers_1.Long.fromValue(object.maxPayloadSize) : helpers_1.Long.UZERO,
            mirrorBucketRelayerFee: (0, helpers_1.isSet)(object.mirrorBucketRelayerFee) ? String(object.mirrorBucketRelayerFee) : "",
            mirrorBucketAckRelayerFee: (0, helpers_1.isSet)(object.mirrorBucketAckRelayerFee) ? String(object.mirrorBucketAckRelayerFee) : "",
            mirrorObjectRelayerFee: (0, helpers_1.isSet)(object.mirrorObjectRelayerFee) ? String(object.mirrorObjectRelayerFee) : "",
            mirrorObjectAckRelayerFee: (0, helpers_1.isSet)(object.mirrorObjectAckRelayerFee) ? String(object.mirrorObjectAckRelayerFee) : "",
            mirrorGroupRelayerFee: (0, helpers_1.isSet)(object.mirrorGroupRelayerFee) ? String(object.mirrorGroupRelayerFee) : "",
            mirrorGroupAckRelayerFee: (0, helpers_1.isSet)(object.mirrorGroupAckRelayerFee) ? String(object.mirrorGroupAckRelayerFee) : "",
            maxBucketsPerAccount: (0, helpers_1.isSet)(object.maxBucketsPerAccount) ? Number(object.maxBucketsPerAccount) : 0,
            discontinueCountingWindow: (0, helpers_1.isSet)(object.discontinueCountingWindow) ? helpers_1.Long.fromValue(object.discontinueCountingWindow) : helpers_1.Long.UZERO,
            discontinueObjectMax: (0, helpers_1.isSet)(object.discontinueObjectMax) ? helpers_1.Long.fromValue(object.discontinueObjectMax) : helpers_1.Long.UZERO,
            discontinueBucketMax: (0, helpers_1.isSet)(object.discontinueBucketMax) ? helpers_1.Long.fromValue(object.discontinueBucketMax) : helpers_1.Long.UZERO,
            discontinueConfirmPeriod: (0, helpers_1.isSet)(object.discontinueConfirmPeriod) ? helpers_1.Long.fromValue(object.discontinueConfirmPeriod) : helpers_1.Long.ZERO,
            discontinueDeletionMax: (0, helpers_1.isSet)(object.discontinueDeletionMax) ? helpers_1.Long.fromValue(object.discontinueDeletionMax) : helpers_1.Long.UZERO,
            stalePolicyCleanupMax: (0, helpers_1.isSet)(object.stalePolicyCleanupMax) ? helpers_1.Long.fromValue(object.stalePolicyCleanupMax) : helpers_1.Long.UZERO
        };
    },
    toJSON(message) {
        const obj = {};
        message.versionedParams !== undefined && (obj.versionedParams = message.versionedParams ? exports.VersionedParams.toJSON(message.versionedParams) : undefined);
        message.maxPayloadSize !== undefined && (obj.maxPayloadSize = (message.maxPayloadSize || helpers_1.Long.UZERO).toString());
        message.mirrorBucketRelayerFee !== undefined && (obj.mirrorBucketRelayerFee = message.mirrorBucketRelayerFee);
        message.mirrorBucketAckRelayerFee !== undefined && (obj.mirrorBucketAckRelayerFee = message.mirrorBucketAckRelayerFee);
        message.mirrorObjectRelayerFee !== undefined && (obj.mirrorObjectRelayerFee = message.mirrorObjectRelayerFee);
        message.mirrorObjectAckRelayerFee !== undefined && (obj.mirrorObjectAckRelayerFee = message.mirrorObjectAckRelayerFee);
        message.mirrorGroupRelayerFee !== undefined && (obj.mirrorGroupRelayerFee = message.mirrorGroupRelayerFee);
        message.mirrorGroupAckRelayerFee !== undefined && (obj.mirrorGroupAckRelayerFee = message.mirrorGroupAckRelayerFee);
        message.maxBucketsPerAccount !== undefined && (obj.maxBucketsPerAccount = Math.round(message.maxBucketsPerAccount));
        message.discontinueCountingWindow !== undefined && (obj.discontinueCountingWindow = (message.discontinueCountingWindow || helpers_1.Long.UZERO).toString());
        message.discontinueObjectMax !== undefined && (obj.discontinueObjectMax = (message.discontinueObjectMax || helpers_1.Long.UZERO).toString());
        message.discontinueBucketMax !== undefined && (obj.discontinueBucketMax = (message.discontinueBucketMax || helpers_1.Long.UZERO).toString());
        message.discontinueConfirmPeriod !== undefined && (obj.discontinueConfirmPeriod = (message.discontinueConfirmPeriod || helpers_1.Long.ZERO).toString());
        message.discontinueDeletionMax !== undefined && (obj.discontinueDeletionMax = (message.discontinueDeletionMax || helpers_1.Long.UZERO).toString());
        message.stalePolicyCleanupMax !== undefined && (obj.stalePolicyCleanupMax = (message.stalePolicyCleanupMax || helpers_1.Long.UZERO).toString());
        return obj;
    },
    fromPartial(object) {
        const message = createBaseParams();
        message.versionedParams = object.versionedParams !== undefined && object.versionedParams !== null ? exports.VersionedParams.fromPartial(object.versionedParams) : undefined;
        message.maxPayloadSize = object.maxPayloadSize !== undefined && object.maxPayloadSize !== null ? helpers_1.Long.fromValue(object.maxPayloadSize) : helpers_1.Long.UZERO;
        message.mirrorBucketRelayerFee = object.mirrorBucketRelayerFee ?? "";
        message.mirrorBucketAckRelayerFee = object.mirrorBucketAckRelayerFee ?? "";
        message.mirrorObjectRelayerFee = object.mirrorObjectRelayerFee ?? "";
        message.mirrorObjectAckRelayerFee = object.mirrorObjectAckRelayerFee ?? "";
        message.mirrorGroupRelayerFee = object.mirrorGroupRelayerFee ?? "";
        message.mirrorGroupAckRelayerFee = object.mirrorGroupAckRelayerFee ?? "";
        message.maxBucketsPerAccount = object.maxBucketsPerAccount ?? 0;
        message.discontinueCountingWindow = object.discontinueCountingWindow !== undefined && object.discontinueCountingWindow !== null ? helpers_1.Long.fromValue(object.discontinueCountingWindow) : helpers_1.Long.UZERO;
        message.discontinueObjectMax = object.discontinueObjectMax !== undefined && object.discontinueObjectMax !== null ? helpers_1.Long.fromValue(object.discontinueObjectMax) : helpers_1.Long.UZERO;
        message.discontinueBucketMax = object.discontinueBucketMax !== undefined && object.discontinueBucketMax !== null ? helpers_1.Long.fromValue(object.discontinueBucketMax) : helpers_1.Long.UZERO;
        message.discontinueConfirmPeriod = object.discontinueConfirmPeriod !== undefined && object.discontinueConfirmPeriod !== null ? helpers_1.Long.fromValue(object.discontinueConfirmPeriod) : helpers_1.Long.ZERO;
        message.discontinueDeletionMax = object.discontinueDeletionMax !== undefined && object.discontinueDeletionMax !== null ? helpers_1.Long.fromValue(object.discontinueDeletionMax) : helpers_1.Long.UZERO;
        message.stalePolicyCleanupMax = object.stalePolicyCleanupMax !== undefined && object.stalePolicyCleanupMax !== null ? helpers_1.Long.fromValue(object.stalePolicyCleanupMax) : helpers_1.Long.UZERO;
        return message;
    },
    fromSDK(object) {
        return {
            versionedParams: object.versioned_params ? exports.VersionedParams.fromSDK(object.versioned_params) : undefined,
            maxPayloadSize: object?.max_payload_size,
            mirrorBucketRelayerFee: object?.mirror_bucket_relayer_fee,
            mirrorBucketAckRelayerFee: object?.mirror_bucket_ack_relayer_fee,
            mirrorObjectRelayerFee: object?.mirror_object_relayer_fee,
            mirrorObjectAckRelayerFee: object?.mirror_object_ack_relayer_fee,
            mirrorGroupRelayerFee: object?.mirror_group_relayer_fee,
            mirrorGroupAckRelayerFee: object?.mirror_group_ack_relayer_fee,
            maxBucketsPerAccount: object?.max_buckets_per_account,
            discontinueCountingWindow: object?.discontinue_counting_window,
            discontinueObjectMax: object?.discontinue_object_max,
            discontinueBucketMax: object?.discontinue_bucket_max,
            discontinueConfirmPeriod: object?.discontinue_confirm_period,
            discontinueDeletionMax: object?.discontinue_deletion_max,
            stalePolicyCleanupMax: object?.stale_policy_cleanup_max
        };
    },
    toSDK(message) {
        const obj = {};
        message.versionedParams !== undefined && (obj.versioned_params = message.versionedParams ? exports.VersionedParams.toSDK(message.versionedParams) : undefined);
        obj.max_payload_size = message.maxPayloadSize;
        obj.mirror_bucket_relayer_fee = message.mirrorBucketRelayerFee;
        obj.mirror_bucket_ack_relayer_fee = message.mirrorBucketAckRelayerFee;
        obj.mirror_object_relayer_fee = message.mirrorObjectRelayerFee;
        obj.mirror_object_ack_relayer_fee = message.mirrorObjectAckRelayerFee;
        obj.mirror_group_relayer_fee = message.mirrorGroupRelayerFee;
        obj.mirror_group_ack_relayer_fee = message.mirrorGroupAckRelayerFee;
        obj.max_buckets_per_account = message.maxBucketsPerAccount;
        obj.discontinue_counting_window = message.discontinueCountingWindow;
        obj.discontinue_object_max = message.discontinueObjectMax;
        obj.discontinue_bucket_max = message.discontinueBucketMax;
        obj.discontinue_confirm_period = message.discontinueConfirmPeriod;
        obj.discontinue_deletion_max = message.discontinueDeletionMax;
        obj.stale_policy_cleanup_max = message.stalePolicyCleanupMax;
        return obj;
    }
};
function createBaseVersionedParams() {
    return {
        maxSegmentSize: helpers_1.Long.UZERO,
        redundantDataChunkNum: 0,
        redundantParityChunkNum: 0,
        minChargeSize: helpers_1.Long.UZERO
    };
}
exports.VersionedParams = {
    encode(message, writer = _m0.Writer.create()) {
        if (!message.maxSegmentSize.isZero()) {
            writer.uint32(8).uint64(message.maxSegmentSize);
        }
        if (message.redundantDataChunkNum !== 0) {
            writer.uint32(16).uint32(message.redundantDataChunkNum);
        }
        if (message.redundantParityChunkNum !== 0) {
            writer.uint32(24).uint32(message.redundantParityChunkNum);
        }
        if (!message.minChargeSize.isZero()) {
            writer.uint32(32).uint64(message.minChargeSize);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseVersionedParams();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.maxSegmentSize = reader.uint64();
                    break;
                case 2:
                    message.redundantDataChunkNum = reader.uint32();
                    break;
                case 3:
                    message.redundantParityChunkNum = reader.uint32();
                    break;
                case 4:
                    message.minChargeSize = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            maxSegmentSize: (0, helpers_1.isSet)(object.maxSegmentSize) ? helpers_1.Long.fromValue(object.maxSegmentSize) : helpers_1.Long.UZERO,
            redundantDataChunkNum: (0, helpers_1.isSet)(object.redundantDataChunkNum) ? Number(object.redundantDataChunkNum) : 0,
            redundantParityChunkNum: (0, helpers_1.isSet)(object.redundantParityChunkNum) ? Number(object.redundantParityChunkNum) : 0,
            minChargeSize: (0, helpers_1.isSet)(object.minChargeSize) ? helpers_1.Long.fromValue(object.minChargeSize) : helpers_1.Long.UZERO
        };
    },
    toJSON(message) {
        const obj = {};
        message.maxSegmentSize !== undefined && (obj.maxSegmentSize = (message.maxSegmentSize || helpers_1.Long.UZERO).toString());
        message.redundantDataChunkNum !== undefined && (obj.redundantDataChunkNum = Math.round(message.redundantDataChunkNum));
        message.redundantParityChunkNum !== undefined && (obj.redundantParityChunkNum = Math.round(message.redundantParityChunkNum));
        message.minChargeSize !== undefined && (obj.minChargeSize = (message.minChargeSize || helpers_1.Long.UZERO).toString());
        return obj;
    },
    fromPartial(object) {
        const message = createBaseVersionedParams();
        message.maxSegmentSize = object.maxSegmentSize !== undefined && object.maxSegmentSize !== null ? helpers_1.Long.fromValue(object.maxSegmentSize) : helpers_1.Long.UZERO;
        message.redundantDataChunkNum = object.redundantDataChunkNum ?? 0;
        message.redundantParityChunkNum = object.redundantParityChunkNum ?? 0;
        message.minChargeSize = object.minChargeSize !== undefined && object.minChargeSize !== null ? helpers_1.Long.fromValue(object.minChargeSize) : helpers_1.Long.UZERO;
        return message;
    },
    fromSDK(object) {
        return {
            maxSegmentSize: object?.max_segment_size,
            redundantDataChunkNum: object?.redundant_data_chunk_num,
            redundantParityChunkNum: object?.redundant_parity_chunk_num,
            minChargeSize: object?.min_charge_size
        };
    },
    toSDK(message) {
        const obj = {};
        obj.max_segment_size = message.maxSegmentSize;
        obj.redundant_data_chunk_num = message.redundantDataChunkNum;
        obj.redundant_parity_chunk_num = message.redundantParityChunkNum;
        obj.min_charge_size = message.minChargeSize;
        return obj;
    }
};
//# sourceMappingURL=params.js.map