import { Params, ParamsSDKType } from "./params";
import * as _m0 from "protobufjs/minimal";
export declare const protobufPackage = "greenfield.bridge";
/** GenesisState defines the bridge module's genesis state. */
export interface GenesisState {
    /** Params defines all the paramaters of the module. */
    params?: Params;
}
/** GenesisState defines the bridge module's genesis state. */
export interface GenesisStateSDKType {
    params?: ParamsSDKType;
}
export declare const GenesisState: {
    encode(message: GenesisState, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GenesisState;
    fromJSON(object: any): GenesisState;
    toJSON(message: GenesisState): unknown;
    fromPartial<I extends {
        params?: {
            transferOutRelayerFee?: string | undefined;
            transferOutAckRelayerFee?: string | undefined;
        } | undefined;
    } & {
        params?: ({
            transferOutRelayerFee?: string | undefined;
            transferOutAckRelayerFee?: string | undefined;
        } & {
            transferOutRelayerFee?: string | undefined;
            transferOutAckRelayerFee?: string | undefined;
        } & Record<Exclude<keyof I["params"], keyof Params>, never>) | undefined;
    } & Record<Exclude<keyof I, "params">, never>>(object: I): GenesisState;
    fromSDK(object: GenesisStateSDKType): GenesisState;
    toSDK(message: GenesisState): GenesisStateSDKType;
};
