"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.QueryClientImpl = exports.QueryInturnRelayerResponse = exports.QueryInturnRelayerRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.protobufPackage = void 0;
/* eslint-disable */
const oracle_1 = require("./oracle");
const _m0 = __importStar(require("protobufjs/minimal"));
const helpers_1 = require("../../../helpers");
exports.protobufPackage = "cosmos.oracle.v1";
function createBaseQueryParamsRequest() {
    return {};
}
exports.QueryParamsRequest = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    fromPartial(_) {
        const message = createBaseQueryParamsRequest();
        return message;
    },
    fromSDK(_) {
        return {};
    },
    toSDK(_) {
        const obj = {};
        return obj;
    }
};
function createBaseQueryParamsResponse() {
    return {
        params: undefined
    };
}
exports.QueryParamsResponse = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.params !== undefined) {
            oracle_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseQueryParamsResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.params = oracle_1.Params.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            params: (0, helpers_1.isSet)(object.params) ? oracle_1.Params.fromJSON(object.params) : undefined
        };
    },
    toJSON(message) {
        const obj = {};
        message.params !== undefined && (obj.params = message.params ? oracle_1.Params.toJSON(message.params) : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseQueryParamsResponse();
        message.params = object.params !== undefined && object.params !== null ? oracle_1.Params.fromPartial(object.params) : undefined;
        return message;
    },
    fromSDK(object) {
        return {
            params: object.params ? oracle_1.Params.fromSDK(object.params) : undefined
        };
    },
    toSDK(message) {
        const obj = {};
        message.params !== undefined && (obj.params = message.params ? oracle_1.Params.toSDK(message.params) : undefined);
        return obj;
    }
};
function createBaseQueryInturnRelayerRequest() {
    return {};
}
exports.QueryInturnRelayerRequest = {
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseQueryInturnRelayerRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    fromPartial(_) {
        const message = createBaseQueryInturnRelayerRequest();
        return message;
    },
    fromSDK(_) {
        return {};
    },
    toSDK(_) {
        const obj = {};
        return obj;
    }
};
function createBaseQueryInturnRelayerResponse() {
    return {
        blsPubKey: "",
        relayInterval: undefined
    };
}
exports.QueryInturnRelayerResponse = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.blsPubKey !== "") {
            writer.uint32(10).string(message.blsPubKey);
        }
        if (message.relayInterval !== undefined) {
            oracle_1.RelayInterval.encode(message.relayInterval, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseQueryInturnRelayerResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.blsPubKey = reader.string();
                    break;
                case 2:
                    message.relayInterval = oracle_1.RelayInterval.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            blsPubKey: (0, helpers_1.isSet)(object.blsPubKey) ? String(object.blsPubKey) : "",
            relayInterval: (0, helpers_1.isSet)(object.relayInterval) ? oracle_1.RelayInterval.fromJSON(object.relayInterval) : undefined
        };
    },
    toJSON(message) {
        const obj = {};
        message.blsPubKey !== undefined && (obj.blsPubKey = message.blsPubKey);
        message.relayInterval !== undefined && (obj.relayInterval = message.relayInterval ? oracle_1.RelayInterval.toJSON(message.relayInterval) : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseQueryInturnRelayerResponse();
        message.blsPubKey = object.blsPubKey ?? "";
        message.relayInterval = object.relayInterval !== undefined && object.relayInterval !== null ? oracle_1.RelayInterval.fromPartial(object.relayInterval) : undefined;
        return message;
    },
    fromSDK(object) {
        return {
            blsPubKey: object?.bls_pub_key,
            relayInterval: object.relay_interval ? oracle_1.RelayInterval.fromSDK(object.relay_interval) : undefined
        };
    },
    toSDK(message) {
        const obj = {};
        obj.bls_pub_key = message.blsPubKey;
        message.relayInterval !== undefined && (obj.relay_interval = message.relayInterval ? oracle_1.RelayInterval.toSDK(message.relayInterval) : undefined);
        return obj;
    }
};
class QueryClientImpl {
    constructor(rpc) {
        this.rpc = rpc;
        this.Params = this.Params.bind(this);
        this.InturnRelayer = this.InturnRelayer.bind(this);
    }
    Params(request = {}) {
        const data = exports.QueryParamsRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.oracle.v1.Query", "Params", data);
        return promise.then(data => exports.QueryParamsResponse.decode(new _m0.Reader(data)));
    }
    InturnRelayer(request = {}) {
        const data = exports.QueryInturnRelayerRequest.encode(request).finish();
        const promise = this.rpc.request("cosmos.oracle.v1.Query", "InturnRelayer", data);
        return promise.then(data => exports.QueryInturnRelayerResponse.decode(new _m0.Reader(data)));
    }
}
exports.QueryClientImpl = QueryClientImpl;
//# sourceMappingURL=query.js.map