"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RelayInterval = exports.Params = exports.protobufPackage = void 0;
/* eslint-disable */
const helpers_1 = require("../../../helpers");
const _m0 = __importStar(require("protobufjs/minimal"));
exports.protobufPackage = "cosmos.oracle.v1";
function createBaseParams() {
    return {
        relayerTimeout: helpers_1.Long.UZERO,
        relayerInterval: helpers_1.Long.UZERO,
        relayerRewardShare: 0
    };
}
exports.Params = {
    encode(message, writer = _m0.Writer.create()) {
        if (!message.relayerTimeout.isZero()) {
            writer.uint32(8).uint64(message.relayerTimeout);
        }
        if (!message.relayerInterval.isZero()) {
            writer.uint32(16).uint64(message.relayerInterval);
        }
        if (message.relayerRewardShare !== 0) {
            writer.uint32(24).uint32(message.relayerRewardShare);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.relayerTimeout = reader.uint64();
                    break;
                case 2:
                    message.relayerInterval = reader.uint64();
                    break;
                case 3:
                    message.relayerRewardShare = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            relayerTimeout: (0, helpers_1.isSet)(object.relayerTimeout) ? helpers_1.Long.fromValue(object.relayerTimeout) : helpers_1.Long.UZERO,
            relayerInterval: (0, helpers_1.isSet)(object.relayerInterval) ? helpers_1.Long.fromValue(object.relayerInterval) : helpers_1.Long.UZERO,
            relayerRewardShare: (0, helpers_1.isSet)(object.relayerRewardShare) ? Number(object.relayerRewardShare) : 0
        };
    },
    toJSON(message) {
        const obj = {};
        message.relayerTimeout !== undefined && (obj.relayerTimeout = (message.relayerTimeout || helpers_1.Long.UZERO).toString());
        message.relayerInterval !== undefined && (obj.relayerInterval = (message.relayerInterval || helpers_1.Long.UZERO).toString());
        message.relayerRewardShare !== undefined && (obj.relayerRewardShare = Math.round(message.relayerRewardShare));
        return obj;
    },
    fromPartial(object) {
        const message = createBaseParams();
        message.relayerTimeout = object.relayerTimeout !== undefined && object.relayerTimeout !== null ? helpers_1.Long.fromValue(object.relayerTimeout) : helpers_1.Long.UZERO;
        message.relayerInterval = object.relayerInterval !== undefined && object.relayerInterval !== null ? helpers_1.Long.fromValue(object.relayerInterval) : helpers_1.Long.UZERO;
        message.relayerRewardShare = object.relayerRewardShare ?? 0;
        return message;
    },
    fromSDK(object) {
        return {
            relayerTimeout: object?.relayer_timeout,
            relayerInterval: object?.relayer_interval,
            relayerRewardShare: object?.relayer_reward_share
        };
    },
    toSDK(message) {
        const obj = {};
        obj.relayer_timeout = message.relayerTimeout;
        obj.relayer_interval = message.relayerInterval;
        obj.relayer_reward_share = message.relayerRewardShare;
        return obj;
    }
};
function createBaseRelayInterval() {
    return {
        start: helpers_1.Long.UZERO,
        end: helpers_1.Long.UZERO
    };
}
exports.RelayInterval = {
    encode(message, writer = _m0.Writer.create()) {
        if (!message.start.isZero()) {
            writer.uint32(8).uint64(message.start);
        }
        if (!message.end.isZero()) {
            writer.uint32(16).uint64(message.end);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseRelayInterval();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.start = reader.uint64();
                    break;
                case 2:
                    message.end = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            start: (0, helpers_1.isSet)(object.start) ? helpers_1.Long.fromValue(object.start) : helpers_1.Long.UZERO,
            end: (0, helpers_1.isSet)(object.end) ? helpers_1.Long.fromValue(object.end) : helpers_1.Long.UZERO
        };
    },
    toJSON(message) {
        const obj = {};
        message.start !== undefined && (obj.start = (message.start || helpers_1.Long.UZERO).toString());
        message.end !== undefined && (obj.end = (message.end || helpers_1.Long.UZERO).toString());
        return obj;
    },
    fromPartial(object) {
        const message = createBaseRelayInterval();
        message.start = object.start !== undefined && object.start !== null ? helpers_1.Long.fromValue(object.start) : helpers_1.Long.UZERO;
        message.end = object.end !== undefined && object.end !== null ? helpers_1.Long.fromValue(object.end) : helpers_1.Long.UZERO;
        return message;
    },
    fromSDK(object) {
        return {
            start: object?.start,
            end: object?.end
        };
    },
    toSDK(message) {
        const obj = {};
        obj.start = message.start;
        obj.end = message.end;
        return obj;
    }
};
//# sourceMappingURL=oracle.js.map