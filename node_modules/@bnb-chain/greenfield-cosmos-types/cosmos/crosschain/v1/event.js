"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventCrossChain = exports.protobufPackage = void 0;
/* eslint-disable */
const helpers_1 = require("../../../helpers");
const _m0 = __importStar(require("protobufjs/minimal"));
exports.protobufPackage = "cosmos.crosschain.v1";
function createBaseEventCrossChain() {
    return {
        srcChainId: 0,
        destChainId: 0,
        channelId: 0,
        sequence: helpers_1.Long.UZERO,
        packageType: 0,
        timestamp: helpers_1.Long.UZERO,
        packageLoad: "",
        relayerFee: "",
        ackRelayerFee: ""
    };
}
exports.EventCrossChain = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.srcChainId !== 0) {
            writer.uint32(8).uint32(message.srcChainId);
        }
        if (message.destChainId !== 0) {
            writer.uint32(16).uint32(message.destChainId);
        }
        if (message.channelId !== 0) {
            writer.uint32(24).uint32(message.channelId);
        }
        if (!message.sequence.isZero()) {
            writer.uint32(32).uint64(message.sequence);
        }
        if (message.packageType !== 0) {
            writer.uint32(40).uint32(message.packageType);
        }
        if (!message.timestamp.isZero()) {
            writer.uint32(48).uint64(message.timestamp);
        }
        if (message.packageLoad !== "") {
            writer.uint32(58).string(message.packageLoad);
        }
        if (message.relayerFee !== "") {
            writer.uint32(66).string(message.relayerFee);
        }
        if (message.ackRelayerFee !== "") {
            writer.uint32(74).string(message.ackRelayerFee);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseEventCrossChain();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.srcChainId = reader.uint32();
                    break;
                case 2:
                    message.destChainId = reader.uint32();
                    break;
                case 3:
                    message.channelId = reader.uint32();
                    break;
                case 4:
                    message.sequence = reader.uint64();
                    break;
                case 5:
                    message.packageType = reader.uint32();
                    break;
                case 6:
                    message.timestamp = reader.uint64();
                    break;
                case 7:
                    message.packageLoad = reader.string();
                    break;
                case 8:
                    message.relayerFee = reader.string();
                    break;
                case 9:
                    message.ackRelayerFee = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            srcChainId: (0, helpers_1.isSet)(object.srcChainId) ? Number(object.srcChainId) : 0,
            destChainId: (0, helpers_1.isSet)(object.destChainId) ? Number(object.destChainId) : 0,
            channelId: (0, helpers_1.isSet)(object.channelId) ? Number(object.channelId) : 0,
            sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO,
            packageType: (0, helpers_1.isSet)(object.packageType) ? Number(object.packageType) : 0,
            timestamp: (0, helpers_1.isSet)(object.timestamp) ? helpers_1.Long.fromValue(object.timestamp) : helpers_1.Long.UZERO,
            packageLoad: (0, helpers_1.isSet)(object.packageLoad) ? String(object.packageLoad) : "",
            relayerFee: (0, helpers_1.isSet)(object.relayerFee) ? String(object.relayerFee) : "",
            ackRelayerFee: (0, helpers_1.isSet)(object.ackRelayerFee) ? String(object.ackRelayerFee) : ""
        };
    },
    toJSON(message) {
        const obj = {};
        message.srcChainId !== undefined && (obj.srcChainId = Math.round(message.srcChainId));
        message.destChainId !== undefined && (obj.destChainId = Math.round(message.destChainId));
        message.channelId !== undefined && (obj.channelId = Math.round(message.channelId));
        message.sequence !== undefined && (obj.sequence = (message.sequence || helpers_1.Long.UZERO).toString());
        message.packageType !== undefined && (obj.packageType = Math.round(message.packageType));
        message.timestamp !== undefined && (obj.timestamp = (message.timestamp || helpers_1.Long.UZERO).toString());
        message.packageLoad !== undefined && (obj.packageLoad = message.packageLoad);
        message.relayerFee !== undefined && (obj.relayerFee = message.relayerFee);
        message.ackRelayerFee !== undefined && (obj.ackRelayerFee = message.ackRelayerFee);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseEventCrossChain();
        message.srcChainId = object.srcChainId ?? 0;
        message.destChainId = object.destChainId ?? 0;
        message.channelId = object.channelId ?? 0;
        message.sequence = object.sequence !== undefined && object.sequence !== null ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO;
        message.packageType = object.packageType ?? 0;
        message.timestamp = object.timestamp !== undefined && object.timestamp !== null ? helpers_1.Long.fromValue(object.timestamp) : helpers_1.Long.UZERO;
        message.packageLoad = object.packageLoad ?? "";
        message.relayerFee = object.relayerFee ?? "";
        message.ackRelayerFee = object.ackRelayerFee ?? "";
        return message;
    },
    fromSDK(object) {
        return {
            srcChainId: object?.src_chain_id,
            destChainId: object?.dest_chain_id,
            channelId: object?.channel_id,
            sequence: object?.sequence,
            packageType: object?.package_type,
            timestamp: object?.timestamp,
            packageLoad: object?.package_load,
            relayerFee: object?.relayer_fee,
            ackRelayerFee: object?.ack_relayer_fee
        };
    },
    toSDK(message) {
        const obj = {};
        obj.src_chain_id = message.srcChainId;
        obj.dest_chain_id = message.destChainId;
        obj.channel_id = message.channelId;
        obj.sequence = message.sequence;
        obj.package_type = message.packageType;
        obj.timestamp = message.timestamp;
        obj.package_load = message.packageLoad;
        obj.relayer_fee = message.relayerFee;
        obj.ack_relayer_fee = message.ackRelayerFee;
        return obj;
    }
};
//# sourceMappingURL=event.js.map