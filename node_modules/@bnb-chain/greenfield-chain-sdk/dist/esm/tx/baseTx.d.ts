export interface IBaseMsg {
    sequence: string;
    denom: string;
    accountNumber: string;
    gasLimit: number;
    gasPrice: string;
}
export interface ISendMsg {
    from: string;
    to: string;
    amount: string;
}
export interface IRawTxInfo {
    bytes: Uint8Array;
    hex: string;
}
export declare class BaseTx {
    readonly rpcUrl: string;
    readonly chainId: string;
    readonly txType: string;
    private static client;
    constructor(rpcUrl: string, chainId: string, txType: string);
    broadcastTx(txRawBytes: Uint8Array): Promise<import("@cosmjs/stargate").DeliverTxResponse>;
    protected getSignture(sign: string): Uint8Array;
    simulateTx(txBodyBytes: Uint8Array, authInfoBytes: Uint8Array): Promise<import("@bnb-chain/greenfield-cosmos-types/cosmos/tx/v1beta1/service").SimulateResponse>;
}
